{"version":3,"sources":["components/greet.js","components/item.js","components/Meeting.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["export_list","flag","button_title","AddMeetingForm","props","handleStart","event","setState","start_time","target","value","handleEnd","end_time","handleDes","Description","handleSub","preventDefault","newItem","state","currentItem","push","newItems","itemList","handle","s","parseInt","replace","e","i","s1","e1","label_style","fontSize","fontFamily","color","margin","padding","marginBottom","backgroundColor","borderRadius","input_style","width","height","borderStyle","style_button","marginLeft","marginRight","cursor","onSubmit","this","style","type","onChange","min","max","placeholder","to","disabled","title","onClick","Component","style_div","align_right","float","Item","item","participants","SelctedDate","MeetingEle","handleChange","date","String","slice","startDate","handleAdd","console","log","map","key","selected","name","dateFormat","placeholderText","minDate","Date","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.3f8cb0ad.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst export_list = []\r\nvar flag = false\r\nvar button_title = 'Slot is available'\r\nclass AddMeetingForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            start_time : '00:00',\r\n            end_time : '00:00',\r\n            Description : \"\",\r\n            currentItem :{\r\n                start_time : '00:00',\r\n                end_time : '00:00',\r\n                Description : \"\",\r\n            },\r\n            itemList : [],\r\n        }\r\n        \r\n    }\r\n    handleStart = (event) =>{\r\n        this.setState({\r\n            start_time: event.target.value\r\n        })\r\n    }\r\n    handleEnd = (event) =>{\r\n        this.setState({\r\n            end_time: event.target.value\r\n        })\r\n    }\r\n\r\n    handleDes = (event) =>{\r\n        this.setState({\r\n            Description : event.target.value\r\n        })\r\n    }\r\n\r\n    handleSub = (event) =>{\r\n        event.preventDefault();\r\n        const newItem = this.state.currentItem;\r\n        if(newItem.Description !== \"\"){\r\n            export_list.push(newItem)\r\n            const newItems = [...this.state.itemList, newItem];\r\n            this.setState({\r\n                itemList : newItems,\r\n                currentItem:{\r\n                    start_time:\"\",\r\n                    end_time:'',\r\n                    Description:''\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handle= () =>{\r\n        flag = false\r\n        button_title=\"slot is available\"\r\n        var s = parseInt(this.state.start_time.replace(':', ''))\r\n        var e = parseInt(this.state.end_time.replace(':', ''))\r\n        for (var i  in export_list) {\r\n            var s1 = parseInt(export_list[i].start_time.replace(':', ''))\r\n            var e1 = parseInt(export_list[i].end_time.replace(':', ''))\r\n            if((s > s1 && e < e1) || (e > s1 && e < e1) || (s > s1 && s < e1)){\r\n                    flag = true\r\n                    button_title=\"slot is unavailable (select different slot)\"\r\n            }\r\n        }\r\n        this.setState({\r\n            currentItem:{\r\n                start_time : this.state.start_time,\r\n                end_time : this.state.end_time,\r\n                Description : this.state.Description,\r\n            },\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const style_textbox = {\r\n            backgroundColor : \"white\",\r\n            width:\"500px\",\r\n            height:\"250px\",\r\n            padding : '10px',\r\n            fontFamily : \"Arial\",\r\n            marginBottom : \"10px\",\r\n            borderRadius : \"6px\",\r\n            borderStyle:\"solid\", \r\n            margin:\"25px\",\r\n            marginLeft:\"10px\",\r\n            marginRight:\"10px\"\r\n        }\r\n\r\n        const style_external = {\r\n            backgroundColor : \"lightblue\",\r\n            width:\"750px\",\r\n            height:\"600px\",\r\n            padding : '10px',\r\n            fontFamily : \"Arial\",\r\n            marginBottom : \"10px\",\r\n            borderRadius : \"6px\",\r\n            borderStyle:\"solid\", \r\n            margin:\"25px\",\r\n            marginLeft:\"10px\",\r\n            marginRight:\"10px\",\r\n        }\r\n\r\n        const label_style ={\r\n            fontSize:\"25px\",\r\n            fontFamily:\"Verdana\",\r\n            color:\"red\",\r\n            margin:\"auto\",\r\n            padding:\"3px\",\r\n            marginBottom:\"100px\",\r\n            backgroundColor:\"lightyellow\",\r\n            borderRadius:\"4px\",\r\n        }\r\n\r\n        const input_style={\r\n            margin:\"20px\",\r\n            width:\"100px\",\r\n            height:\"25px\",\r\n            borderRadius:\"6px\",\r\n            borderStyle:\"solid\"\r\n        }\r\n\r\n        const style_button = {\r\n            marginLeft:\"25px\",\r\n            marginRight:\"40px\",\r\n            width:\"100px\",\r\n            borderRadius:\"6px\",\r\n            borderStyle:\"solid\",\r\n            padding:\"5px\",\r\n            cursor:\"pointer\"\r\n        }\r\n\r\n        return (\r\n            <center><form onSubmit={this.handleSub}>\r\n                <h2 style={{backgroundColor:\"lightyellow\"}}> ADD MEETING </h2>\r\n                <div style={style_external}>\r\n                <div><label style={label_style}>Start time:</label></div>\r\n                <div>\r\n                    <input type=\"time\" style={input_style} value={this.state.start_time} onChange={this.handleStart} min=\"0000\" max=\"2359\"></input>\r\n                </div>\r\n                <div><label style={label_style}>End time:</label></div>\r\n                <div>\r\n                    <input type=\"time\" style={input_style} value={this.state.end_time} onChange={this.handleEnd} min=\"0000\" max=\"2359\"></input>\r\n                </div>\r\n                <div><label style={label_style}>Description:</label></div>\r\n                <div>\r\n                    <textarea type=\"text\" placeholder=\"Enter the Description of meeting\" style={style_textbox} value={this.state.Description} onChange={this.handleDes}></textarea>\r\n                </div>\r\n                <div>\r\n                    <Link to='/'><button style={style_button} type=\"button\">Go back</button></Link>\r\n                    <button type=\"submit\" style={style_button} disabled={flag} title={button_title}>Schedule</button>\r\n                    <button onClick={this.handle} style={style_button} type=\"button\">Save</button>\r\n                </div>\r\n                </div>\r\n                \r\n            </form></center>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport {AddMeetingForm, export_list}","import React from'react'\r\n\r\nconst style_div ={\r\n    backgroundColor : \"lightblue\",\r\n    padding  : \"10px\",\r\n    marginBottom : \"10px\",\r\n    borderRadius : \"6px\",\r\n    borderStyle:\"solid\", \r\n    margin:\"25px\",\r\n    marginLeft:\"100px\",\r\n    marginRight:\"100px\",    \r\n}\r\n\r\nconst align_right = {\r\n    float : \"right\",\r\n}\r\n\r\nfunction Item(props) {\r\n    return (\r\n        <div style={style_div}><div style={align_right}>{props.item.Description}{props.item.participants}</div>\r\n                            <div>Time Slot :- {props.item.start_time} to {props.item.end_time}</div></div>\r\n    )\r\n}\r\n\r\nexport default Item","import React, {Component, useState} from 'react'\r\nimport ReactTable from \"react-table\"\r\nimport { Link } from 'react-router-dom'\r\nimport DatePicker from 'react-datepicker'\r\nimport {export_list} from './greet'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport moment from 'moment'\r\nimport Item from './item'\r\n//import RequestData from './Request'\r\n\r\nvar SelctedDate = ''\r\n\r\nclass MeetingEle extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            startDate: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (date) => {\r\n        SelctedDate = String(date).slice(4, 16)\r\n        //window.location.reload(false)\r\n        this.setState({\r\n            startDate: date\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    handleAdd = () =>{\r\n        \r\n            console.log(this.state.startDate);\r\n        \r\n    } \r\n\r\n    render(){\r\n\r\n    const style_div ={\r\n        backgroundColor : \"lightblue\",\r\n        padding  : \"10px\",\r\n        marginBottom : \"10px\",\r\n        borderRadius : \"6px\",\r\n        fontSize:\"20px\",\r\n        margin:\"25px\",\r\n        height:\"25px\",\r\n        width:\"300px\",\r\n         \r\n    }\r\n        \r\n    const align_left = {\r\n        float : \"left\",\r\n    }\r\n    const align_right = {\r\n        float : \"right\",\r\n    }\r\n        \r\n    const style_button={\r\n        marginLeft:\"25px\",\r\n        marginRight:\"40px\",\r\n        width:\"100px\",\r\n        borderRadius:\"6px\",\r\n        borderStyle:\"solid\",\r\n        padding:\"5px\"\r\n    } \r\n    \r\n    const item = export_list\r\n    const itemList = item.map(item => <Item item={item} key={item.Description}></Item>)\r\n    return (  \r\n        \r\n        <div>\r\n            <div>\r\n                <center><h1 style={{backgroundColor:\"lightyellow\"}}>MEETING SCHEDULER</h1></center>\r\n            </div>\r\n            <center><div style={{margin:\"25px\", backgroundColor:\"lightyellow\", width:\"200px\", height:\"30px\", \r\n                padding:\"5px\",borderStyle:\"solid\", borderRadius:\"5px\" }}><DatePicker\r\n              selected={ this.state.startDate }\r\n              onChange={ this.handleChange }\r\n              name=\"startDate\"\r\n              dateFormat=\"MM/dd/yyyy\"\r\n              value={this.state.startDate }\r\n              placeholderText=\"Select the date\"\r\n              minDate={new Date()}\r\n            /></div></center>\r\n            <center><b><div style={style_div}>Date : {SelctedDate}</div></b></center>\r\n           {itemList}\r\n           <Link to=\"/Greet\"><center><button style={style_button} onClick={this.handleAdd}>Add Meeting</button></center></Link>\r\n           {/*<RequestData></RequestData>*/}\r\n        </div>        \r\n   )}  \r\n}\r\n\r\nexport default MeetingEle","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {AddMeetingForm, export_list} from './components/greet'\n//import FetchData from './components/Meeting'\nimport MeetingEle from './components/Meeting'\nimport {BrowserRouter, Route} from \"react-router-dom\"\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <Route path=\"/\" exact component={MeetingEle}/>\n        <Route path=\"/Greet\" exact component={AddMeetingForm}/>\n      </BrowserRouter>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}